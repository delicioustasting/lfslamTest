project( rgbd2points)
cmake_minimum_required(VERSION 2.8)
#set( CMAKE_CXX_COMPLIER "g++")

#set( CMAKE_BUILD_TYPE Release )
set( CMAKE_CXX_FLAGS "-std=c++11 -O3" )

# 设定bin目录
set( EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)

# 设定lib目录 并设为链接目录 
set( LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
LINK_DIRECTORIES( ${PROJECT_SOURCE_DIR}/lib)

# 设置本工程头文件目录
INCLUDE_DIRECTORIES( ${PROJECT_SOURCE_DIR}/include)

# 增加子文件夹，也就是进入源代码文件夹继续构建
#ADD_SUBDIRECTORY( ${PROJECT_SOURCE_DIR}/src)

# 增加PCL库的依赖
FIND_PACKAGE(PCL REQUIRED COMPONENTS common io)
#FIND_PACKAGE( PCL REQUIRED COMPONENTS common io )

# 增加opencv的依赖
FIND_PACKAGE(OpenCV REQUIRED)
#FIND_PACKAGE( OpenCV REQUIRED )
INCLUDE_DIRECTORIES( ${OpenCV_INCLUDE_DIRS} )
#LINK_LIBRARIES( ${OpenCV_LIBRARY_DIRS})

# 添加头文件和库文件
#ADD_DEFINITIONS( ${PCL_DEFINITIONS} )
#INCLUDE_DIRECTORIES( ${PCL_INCLUDE_DIRS}  )
#LINK_LIBRARIES( ${PCL_LIBRARY_DIRS} )

ADD_DEFINITIONS( ${PCL_DEFINITIONS})
INCLUDE_DIRECTORIES( ${PCL_INCLUDE_DIRS})
LINK_LIBRARIES( ${PCL_LIBRARY_DIRS})

# 增加子文件夹，也就是进入源代码文件夹继续构建
ADD_SUBDIRECTORY( ${PROJECT_SOURCE_DIR}/src)

#ADD_EXECUTABLE( rgbd2points rgbd2points.cpp)
#ADD_EXECUTABLE( colorDepthMap colorDepthMap.cpp)
#TARGET_LINK_LIBRARIES( rgbd2points ${OpenCV_LIBS} ${PCL_LIBRARIES})
#TARGET_LINK_LIBRARIES( colorDepthMap ${OpenCV_LIBS} ${PCL_LIBRARIES})
